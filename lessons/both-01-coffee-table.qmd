---
output: html
html-table-processing: none
jupyter: python3
---

# Code Along: Coffee Table

```{python}
import polars as pl
import polars.selectors as cs
from great_tables import GT, loc, style
```

```{r}
library(gt)
library(tidyverse)
```

Importing the data.

```{python}
coffee_sales = pl.DataFrame.deserialize("data/coffee-sales.json", format="json")

coffee_sales
```

```{r}
coffee_sales <- readr::read_csv("data/coffee-sales.csv")

coffee_sales
```

`GT()` / `gt()`

```{python}
gt_tbl_p = GT(coffee_sales)

gt_tbl_p
```

```{r}
gt_tbl_r <- gt(coffee_sales)

gt_tbl_r
```

## Adding Structure to the Table

`tab_header()`

```{python}
gt_tbl = gt_tbl.tab_header(title="Sales of Coffee Equipment")

gt_tbl
```

```{r}
gt_tbl_r <- gt_tbl_r |> tab_header(title = "Sales of Coffee Equipment")

gt_tbl_r
```

`tab_spanner()`

```{python}

gt_tbl = (
    gt_tbl
    .tab_spanner(label="Revenue", columns=cs.starts_with("revenue"))
    .tab_spanner(label="Profit", columns=cs.starts_with("profit"))
)

gt_tbl
```

```{r}
gt_tbl_r <-
    gt_tbl_r |>
    tab_spanner(label = "Revenue", columns = starts_with("revenue")) |>
    tab_spanner(label = "Profit", columns = starts_with("profit"))

gt_tbl_r
```

`cols_label()`

```{python}
gt_tbl = (
    gt_tbl
    .cols_label(
        icon="",
        revenue_dollars="Amount",
        profit_dollars="Amount",
        revenue_pct="Percent",
        profit_pct="Percent",
        monthly_sales="Monthly Sales",
        product="Product",
    )
)

gt_tbl
```

```{r}
gt_tbl_r <-
    gt_tbl_r |>
    cols_label(
        icon = "",
        product = "Product",
        revenue_dollars = "Amount",
        profit_dollars = "Amount",
        revenue_pct = "Percent",
        profit_pct = "Percent"
    )

gt_tbl_r
```

## Formatting Values Within the Table Body

`fmt_currency()`

```{python}
gt_tbl = (
    gt_tbl
    .fmt_currency(
        columns=cs.ends_with("dollars"),
        use_subunits=False
    )
)

gt_tbl
```

```{r}
gt_tbl_r <- 
    gt_tbl_r |>
    fmt_currency(
        columns = ends_with("dollars"),
        use_subunits = FALSE
    )

gt_tbl_r
```

`fmt_percent()`

```{python}
gt_tbl = (
    gt_tbl
    .fmt_percent(
        columns=cs.ends_with("pct"),
        decimals=0
    )
)

gt_tbl
```

```{r}
gt_tbl_r <-
    gt_tbl_r |>
    fmt_percent(
        columns = ends_with("pct"),
        decimals = 0
    )

gt_tbl_r
```

## Styling the Table

`tab_style()` - 1

```{python}
gt_tbl = (
    gt_tbl
    .tab_style(
        style=style.fill(color="aliceblue"),
        locations=loc.body(columns=cs.starts_with("revenue"))
    )
)

gt_tbl
```

```{r}
gt_tbl_r <-
    gt_tbl_r |>
    tab_style(
        style = cell_fill(color = "aliceblue"),
        locations = cells_body(columns = starts_with("revenue"))
    )

gt_tbl_r
```

`tab_style()` - 2

```{python}
gt_tbl = (
    gt_tbl
    .tab_style(
        style=style.fill(color="papayawhip"),
        locations=loc.body(columns=cs.starts_with("profit"))
    )
)

gt_tbl
```

```{r}
gt_tbl_r <-
    gt_tbl_r |>
    tab_style(
        style = cell_fill(color = "papayawhip"),
        locations = cells_body(columns = starts_with("profit"))
    )

gt_tbl_r
```

`tab_style()` - 3

```{python}
gt_tbl = (
    gt_tbl
    .tab_style(
        style=style.text(weight="bold"),
        locations=loc.body(rows=pl.col("product") == "Total"),
    )
)

gt_tbl
```

```{r}
gt_tbl_r <-
    gt_tbl_r |>
    tab_style(
        style = cell_text(weight = "bold"),
        locations = cells_body(rows = product == "Total")
    )

gt_tbl_r
```

## Adding a Column of Nanoplots

`fmt_nanoplot()` / `cols_nanoplot()`

```{python}
gt_tbl = (
    gt_tbl
    .fmt_nanoplot(
        columns="monthly_sales",
        plot_type="bar"
    )
)

gt_tbl
```

```{r}
gt_tbl_r <-
    gt_tbl_r |>
    cols_nanoplot(
        columns = monthly_sales, 
        plot_type = "bar",
        new_col_name = "nanoplots",
        new_col_label = "Monthly Sales" 
    )

gt_tbl_r
```

## Adding Images to the Table

`fmt_image()`

```{python}
gt_tbl = (
    gt_tbl
    .fmt_image(
        columns="icon",
        path="img/"
    )
)

gt_tbl
```

```{r}
gt_tbl_r <-
    gt_tbl_r |>
    fmt_image(
        columns = icon,
        path = "img/"
    )

gt_tbl_r
```

## Making Some Final Tweaks

`sub_missing()`

```{python}
gt_tbl = gt_tbl.sub_missing(missing_text="")

gt_tbl
```

```{r}
gt_tbl_r <- gt_tbl_r |> sub_missing(missing_text = "")

gt_tbl_r
```
